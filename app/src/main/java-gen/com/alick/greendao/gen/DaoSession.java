package com.alick.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import demo.greendao.acewill.com.greendao3_demo.bean.HeaderColor;
import demo.greendao.acewill.com.greendao3_demo.bean.Linkman;
import demo.greendao.acewill.com.greendao3_demo.bean.Linkman_MultiChat;
import demo.greendao.acewill.com.greendao3_demo.bean.Linkman_Organization;
import demo.greendao.acewill.com.greendao3_demo.bean.MultiChat;
import demo.greendao.acewill.com.greendao3_demo.bean.Organization;
import demo.greendao.acewill.com.greendao3_demo.bean.User;

import com.alick.greendao.gen.HeaderColorDao;
import com.alick.greendao.gen.LinkmanDao;
import com.alick.greendao.gen.Linkman_MultiChatDao;
import com.alick.greendao.gen.Linkman_OrganizationDao;
import com.alick.greendao.gen.MultiChatDao;
import com.alick.greendao.gen.OrganizationDao;
import com.alick.greendao.gen.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig headerColorDaoConfig;
    private final DaoConfig linkmanDaoConfig;
    private final DaoConfig linkman_MultiChatDaoConfig;
    private final DaoConfig linkman_OrganizationDaoConfig;
    private final DaoConfig multiChatDaoConfig;
    private final DaoConfig organizationDaoConfig;
    private final DaoConfig userDaoConfig;

    private final HeaderColorDao headerColorDao;
    private final LinkmanDao linkmanDao;
    private final Linkman_MultiChatDao linkman_MultiChatDao;
    private final Linkman_OrganizationDao linkman_OrganizationDao;
    private final MultiChatDao multiChatDao;
    private final OrganizationDao organizationDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        headerColorDaoConfig = daoConfigMap.get(HeaderColorDao.class).clone();
        headerColorDaoConfig.initIdentityScope(type);

        linkmanDaoConfig = daoConfigMap.get(LinkmanDao.class).clone();
        linkmanDaoConfig.initIdentityScope(type);

        linkman_MultiChatDaoConfig = daoConfigMap.get(Linkman_MultiChatDao.class).clone();
        linkman_MultiChatDaoConfig.initIdentityScope(type);

        linkman_OrganizationDaoConfig = daoConfigMap.get(Linkman_OrganizationDao.class).clone();
        linkman_OrganizationDaoConfig.initIdentityScope(type);

        multiChatDaoConfig = daoConfigMap.get(MultiChatDao.class).clone();
        multiChatDaoConfig.initIdentityScope(type);

        organizationDaoConfig = daoConfigMap.get(OrganizationDao.class).clone();
        organizationDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        headerColorDao = new HeaderColorDao(headerColorDaoConfig, this);
        linkmanDao = new LinkmanDao(linkmanDaoConfig, this);
        linkman_MultiChatDao = new Linkman_MultiChatDao(linkman_MultiChatDaoConfig, this);
        linkman_OrganizationDao = new Linkman_OrganizationDao(linkman_OrganizationDaoConfig, this);
        multiChatDao = new MultiChatDao(multiChatDaoConfig, this);
        organizationDao = new OrganizationDao(organizationDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(HeaderColor.class, headerColorDao);
        registerDao(Linkman.class, linkmanDao);
        registerDao(Linkman_MultiChat.class, linkman_MultiChatDao);
        registerDao(Linkman_Organization.class, linkman_OrganizationDao);
        registerDao(MultiChat.class, multiChatDao);
        registerDao(Organization.class, organizationDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        headerColorDaoConfig.clearIdentityScope();
        linkmanDaoConfig.clearIdentityScope();
        linkman_MultiChatDaoConfig.clearIdentityScope();
        linkman_OrganizationDaoConfig.clearIdentityScope();
        multiChatDaoConfig.clearIdentityScope();
        organizationDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public HeaderColorDao getHeaderColorDao() {
        return headerColorDao;
    }

    public LinkmanDao getLinkmanDao() {
        return linkmanDao;
    }

    public Linkman_MultiChatDao getLinkman_MultiChatDao() {
        return linkman_MultiChatDao;
    }

    public Linkman_OrganizationDao getLinkman_OrganizationDao() {
        return linkman_OrganizationDao;
    }

    public MultiChatDao getMultiChatDao() {
        return multiChatDao;
    }

    public OrganizationDao getOrganizationDao() {
        return organizationDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
